(function($) {
  return $('#recall_btn_everystudy').click(function() {
    $('#btn_everystudy').trigger('click');
    return false;
  });
})(jQuery);

/*$(document).on 'scroll mousewheel', '.scrollbox', (event) ->
		scrollbox = $ event.currentTarget
		tongue = scrollbox.find '> *'

		console.log tongue

		if (do scrollbox.scrollTop + do scrollbox.height) >= do tongue.height
console.log 'stop'

do event.stopPropagation
do event.preventDefault*/
(function($) {
  var curr, menu, opened, submenus, ua;
  menu = $('#main_menu div.wrapper');
  submenus = $('> ul > li', menu);
  opened = null;
  submenus.each(function() {
    var left, submenu, subnav;
    submenu = $(this);
    subnav = $(this).find('> div.sub_nav');
    left = Math.round((submenu.outerWidth() - subnav.outerWidth()) / 2);
    return subnav.css('left', left + 'px');
  });
  ua = navigator.userAgent;
  if (ua.match(/Android/)) {
    curr = '';
    return submenus.on('click', function(event) {
      var tapped;
      tapped = $(this).find('div.sub_nav');
      if (tapped.is(':hidden')) {
        tapped.show();
        if (curr) {
          curr.hide();
        }
        curr = tapped;
        event.preventDefault();
        return event.stopPropagation();
      }
    });
  } else {
    $(document).on('mouseenter', '#main_menu div.wrapper > ul > li', function() {
      var subnav;
      subnav = $(this).find('> div.sub_nav');
      if (subnav.size() && !subnav.attr('loaded')) {
        $('body').append(subnav);
        subnav.css('position', 'static');
        subnav.width(subnav.outerWidth());
        subnav.css('position', 'absolute');
        $(this).append(subnav);
        subnav.attr('loaded', true);
      }
      return subnav.show();
    });
    return $(document).on('mouseleave', '#main_menu div.wrapper > ul > li', function() {
      return $(this).find('> div.sub_nav').hide();
    });
  }
})(jQuery);

(function($) {
  var all_menus, allview, btn, container, left, menu, menus, offset, section, width, wrapper;
  // 전체 메뉴 보이기/가리기.
  container = $('#all_menus');
  section = $('div.section', container);
  allview = $('#course_allview a.title');
  if (allview.size()) {
    offset = allview.offset();
    width = allview.width();
    left = offset.left + Math.floor(width / 2);
    container.find('div.pin').css('left', left - 8 + 'px');
    if ($('div.group', section).size() === 0) {
      menus = $('#main_menu > div.wrapper > ul > li').clone();
      if (menus.size()) {
        wrapper = $('<div class="wrapper"/>');
        menus.each(function() {
          var group, list, title;
          group = $('<div class="group"/>');
          list = $('> div.sub_nav > ul.sub_nav', this);
          title = $('> div.label', this).removeClass('label').addClass('title');
          if ($(this).hasClass('selected')) {
            title.addClass('selected');
          }
          if (list.find('li.selected').size()) {
            title.addClass('selected');
          }
          group.append(title);
          group.append(list);
          return wrapper.append(group);
        });
        section.append(wrapper);
      } else {
        container.hide();
      }
    }
    btn = $('#course_allview a.title');
    all_menus = $('#all_menus');
    menu = new Menu(btn, all_menus);
    LayerManager.register(menu, '#all_menus');
    $(document).on('click', '#course_allview a.title', function() {
      if (menu.dom.is(':visible')) {
        menu.hide();
      } else {
        LayerManager.reset();
        menu.show();
      }
      return false;
    });
    return $(document).on('click', '#all_menus hgroup a.btn_close', function() {
      all_menus.hide();
      return false;
    });
  }
})(jQuery);

(function($) {
  $(document).on('click', 'input[type="button"].link', function(event) {
    return location.href = $(event.target).attr('href');
  });
  $(document).on('click', '#register', function(event) {
    var $dialog;
    return $dialog = `#${$(event.target).attr('id')}_dialog`;
  });
  return $(document).on('click', 'a[href="#"]', function(event) {
    return false;
  });
})(jQuery);

(function($) {
  var dialog, menus, navbar, nodes, submenus;
  // selected menu highlighter
  menus = $('#main_menu').find('li.selected').parents('li');
  menus.each(function() {
    return $(this).addClass('selected');
  });
  // the right navigation's behavior
  navbar = $('nav#right_nav');
  nodes = $('> ul > li', navbar);
  if (nodes.size() === 0) {

  //do nothing
  } else if (nodes.size() === 2) {
    dialog = LoginDialogManager.get();
    LayerManager.register(dialog, dialog.getSelector());
    return $('> ul > li#login > a.title', navbar).on('click', function() {
      LayerManager.reset();
      dialog.show();
      return false;
    });
  } else {
    submenus = nodes.find('> .submenu');
    return nodes.each(function(i, obj) {
      var menu, node, submenu;
      node = $(obj);
      submenu = $(submenus[i]);
      menu = new Menu(node, submenu);
      LayerManager.register(menu, submenu.attr('id'));
      return $(obj).on('click vclick', function(event) {
        if (menu.dom.is(':visible')) {
          submenu.hide();
        } else {
          LayerManager.reset();
        }
        node = $(event.currentTarget);
        nodes.removeClass('selected');
        node.addClass('selected');
        submenus.hide();
        submenu.show();
        switch (node.attr('id')) {
          case 'activity':
            $.getJSON("/personal/consume_ajax", function(response) {
              var d, j, k, login, ref, ref1, str, url;
              if (response.result) {
                str = '';
                if (response.data.everystudy_list.length > 0) {
                  str = '<menu>';
                  for (i = j = 0, ref = response.data.everystudy_list.length - 1; (0 <= ref ? j <= ref : j >= ref); i = 0 <= ref ? ++j : --j) {
                    d = response.data.everystudy_list[i];
                    d.percentage = d.total === '0' ? 0 : Math.min(Math.round(d.completed / d.total * 100), 100);
                    url = d.course_id === '0' ? `${base_url}module/${d.module_id}` : `${base_url}course/${d.course_id}`;
                    str += `<li><a href=\"${url}\">${htmlspecialchars(d.title)}</a>`;
                    str += '	<div class="archieved' + (d.percentage >= 90 ? ' almost' : '') + '"><span class="percentage">' + d.percentage + '%</span><span class="graph"><span class="bar" style="width: ' + d.percentage + '%"></span></span></div>';
                    str += '</li>';
                  }
                  str += '</menu>';
                } else {
                  str = '<div class="empty"><p>참여하고 있는 공동공부가 없습니다.</p><a href="' + base_url + 'module/180/2236" target="_blank">공동공부란?</a></div>';
                }
                $('#p_everystudy_nest').html(str);
                str = '';
                if (response.data.marking_list.length > 0) {
                  $('#activity_submenu th.marking span.subtitle span.count').text(response.data.marking_num);
                  str = '<menu>';
                  for (i = k = 0, ref1 = response.data.marking_list.length - 1; (0 <= ref1 ? k <= ref1 : k >= ref1); i = 0 <= ref1 ? ++k : --k) {
                    d = response.data.marking_list[i];
                    url = d.course_id === '0' ? `${base_url}module/${d.module_id}` : `${base_url}course/${d.course_id}`;
                    str += `<li><a href=\"${url}\">${d.title}</a></li>`;
                    console.log(d);
                  }
                  str += '</menu>';
                } else {
                  str = '<div class="empty"><p><strong>봤어요</strong>를 하지 않으셨습니다.</p><a href="' + base_url + 'module/180/2361" target="_blank">봤어요란?</a></div>';
                }
                return $('#p_marking_nest').html(str);
              } else if ((response.errorCode != null) === 1) {
                login = LoginDialogManager.get();
                return login.show(true);
              } else {
                xalert(null, response.msg, {
                  modal: true
                });
                return submenu.hide();
              }
            });
            break;
          case 'my_content':
            $.getJSON("/personal/produce_ajax", function(response) {
              var d, j, k, l, login, ref, ref1, ref2, str;
              if (response.result) {
                str = '';
                if (response.data.course_list.length > 0) {
                  str = '<ul>';
                  for (i = j = 0, ref = response.data.course_list.length - 1; (0 <= ref ? j <= ref : j >= ref); i = 0 <= ref ? ++j : --j) {
                    d = response.data.course_list[i];
                    str += `<li><a href=\"${base_url}course/${d['id']}\">${htmlspecialchars(d['title'])}</a></li>`;
                  }
                  str += '</ul>';
                } else {
                  str = '<div class="empty"><p>소유중인 코스가 없습니다.</p></div>';
                }
                $('#p_course_nest').html(str);
                str = '';
                if (response.data.module_list.length > 0) {
                  str = '<div class="divider">소유중인 모듈</div>';
                  str += '<menu>';
                  for (i = k = 0, ref1 = response.data.module_list.length - 1; (0 <= ref1 ? k <= ref1 : k >= ref1); i = 0 <= ref1 ? ++k : --k) {
                    d = response.data.module_list[i];
                    str += `<li><a href=\"${base_url}module/${d['id']}\">${htmlspecialchars(d['title'])}</a></li>`;
                  }
                  str += '</menu>';
                } else {
                  str = '<div class="empty"><p>소유중인 모듈이 없습니다.</p><a href="' + base_url + 'module/180/2360" target="_blank">컨텐츠를 만드는 법</a></div>';
                }
                $('#p_module_nest').html(str);
                str = '';
                if (response.data.contribute_list.length > 0) {
                  str = '<div class="divider">참여중인 모듈</div>';
                  str += '<menu>';
                  for (i = l = 0, ref2 = response.data.contribute_list.length - 1; (0 <= ref2 ? l <= ref2 : l >= ref2); i = 0 <= ref2 ? ++l : --l) {
                    d = response.data.contribute_list[i];
                    str += `<li><a href=\"${base_url}module/${d['module_id']}\">${htmlspecialchars(d['title'])}</a></li>`;
                  }
                  str += '</menu>';
                }
                return $('#p_module_nest').append(str);
              } else if ((response.errorCode != null) === 1) {
                login = LoginDialogManager.get();
                return login.show(true);
              } else {
                xalert(null, response.msg, {
                  modal: true
                });
                return submenu.hide();
              }
            });
        }
        if (event.target.nodeName !== 'A') {
          return false;
        }
      });
    });
  }
})(jQuery);

// 새 모듈 만들기
(function($) {
  var menu;
  if ($('#new_module_layer').size() > 0) {
    $('form#new_module_layer').submit(function() {
      var data, form;
      form = $('form#new_module_layer');
      data = form.serializeArray();
      ga('send', 'event', 'Production', 'module_add_private', $('#new_module_title').val(), {
        useBeacon: true
      });
      $.ajax({
        url: form.attr('action'),
        data: data,
        dataType: 'json',
        type: 'post',
        success: function(response) {
          if (response.result) {
            return xconfirm(function() {
              return location.href = base_url + 'module/' + response.id;
            }, function() {
              $('#btn_create_module').removeClass('selected');
              form.find('input[type=text]').val('');
              form.find('input[type=checkbox]').attr('checked', false);
              form.find('textarea').text('');
              return form.hide();
            }, '모듈이 생성되었습니다.', {
              modal: true,
              label: {
                positive: '생성된 모듈로 이동',
                negative: '확인'
              }
            });
          } else {
            return xalert(null, response.msg, {
              modal: true
            });
          }
        }
      });
      return false;
    });
    $('form#new_module_layer button.btn_close').click(function() {
      var form;
      form = $('form#new_module_layer');
      $('#btn_create_module').removeClass('selected');
      form.find('input[type=text]').val('');
      form.find('input[type=checkbox]').attr('checked', false);
      form.find('textarea').text('');
      form.hide();
      return false;
    });
    menu = new Menu($('#btn_create_module'), $('form#new_module_layer'));
    LayerManager.register(menu, 'new_module_layer');
    return $('#btn_create_module > a.title').click(function(event) {
      var node;
      if (menu.dom.is(':visible')) {
        menu.hide();
      } else {
        LayerManager.reset();
        node = $(event.currentTarget).parent();
        node.addClass('selected');
        $('form#new_module_layer').show();
      }
      return false;
    });
  } else {
    return $('#btn_create_module > a.title').click(function() {
      var login;
      LayerManager.reset();
      $('#btn_create_module').removeClass('selected');
      login = LoginDialogManager.get();
      login.show(true);
      return false;
    });
  }
})(jQuery);

(function($) {
  var Notifier, layer, notifier;
  Notifier = class Notifier {
    constructor(node1, dom) {
      this.node = node1;
      this.dom = dom;
      this.selector = null;
      this.page = 0;
      this.event_name = getCookie('notify_category') === '' ? 'all' : getCookie('notify_category');
      this.already = false;
      $(window).resize(this.resize);
      $(window).scroll(this.resize);
      this.resize();
      $('.notify_cate').click((event) => {
        if (!$(event.currentTarget).hasClass('selected')) {
          return this.getData($(event.currentTarget).data('type'));
        }
      });
    }

    clear() {
      $('#notifier_layer .body.scrollbox ul li').remove();
      return this.page = 0;
    }

    show() {
      this.dom.show();
      this.node.addClass('selected');
      return this.resize();
    }

    resize() {
      var root, rot, th, wh, wst;
      root = $('.body.scrollbox');
      wh = $(window).height();
      rot = root.length > 0 ? root.offset().top : 0;
      th = $('#notifier_layer .tail').innerHeight();
      wst = $(window).scrollTop();
      return root.css('max-height', wh - rot - th + wst - 10);
    }

    hide() {
      if (this.dom.is(':visible')) {
        this.dom.hide();
        this.dom.find('li').addClass('read');
        this.dom.find('li').removeClass('has_new');
        $('#notify_count > a.title span.count').text(0);
        return this.node.removeClass('selected');
      }
    }

    getSelector() {
      return this.selector;
    }

    getData(event_name = '') {
      var indicator, point;
      document.cookie = "notify_category=" + event_name + "; expires=Thu, 18 Dec 3000 12:00:00 UTC; path=/";
      $('.notify_cate').removeClass('selected');
      $('[data-type="' + event_name + '"].notify_cate').addClass('selected');
      indicator = new ProcessIndicator(this.dom);
      indicator.start();
      point = $('ul', this.dom);
      this.count = $('#notify_count > a.title span.count').text();
      if (this.event_name !== event_name) {
        this.page = 0;
        this.event_name = event_name;
        this.clear();
      }
      this.page++;
      return $.post(base_url + 'notifier/get_ajax/' + this.event_name, {
        'page': this.page
      }, (response) => {
        var index, item, items, j, len, ref;
        if (response.result && response.data.list.length > 0) {
          this.dom.find('ul li.empty').remove();
          items = '';
          ref = response.data.list;
          for (index = j = 0, len = ref.length; j < len; index = ++j) {
            item = ref[index];
            items += '<li class="' + item.type + (item.read ? ' read' : '') + (this.count > index + (this.page - 1) * this.scale ? ' has_new' : '') + '"><img class="user_pict" src="' + item.user_pict + '" alt=""><p>' + item.text + '</p><time datetime="' + item.datetime.original + '">' + item.datetime.relative + '</time></li>';
          }
          point.append(items);
        } else {
          point.html('<li class="empty"><p>알림이 없습니다.</p></li>');
        }
        indicator.stop();
        this.node.removeClass('has_new');
        this.already = true;
        $('div.head strong', this.dom).html(`알림 (${response.data.count})`);
        $('span.count', this.dom).text(0);
        if (response.data.more) {
          return $('a.more_notifier', this.dom).css('display', 'block');
        } else {
          return $('a.more_notifier', this.dom).hide('display', 'none');
        }
      }, 'json');
    }

  };
  layer = $('#notifier_layer');
  notifier = new Notifier($('#notify_count'), layer);
  LayerManager.register(notifier, layer.selector);
  $('div.tail button.cancel', layer).click(function() {
    notifier.hide();
    return false;
  });
  $('.btn_close.cancel').click(function() {
    return notifier.hide();
  });
  $('#notify_counter').click(function() {
    if (notifier.dom.is(':visible')) {
      return notifier.hide();
    } else {
      LayerManager.reset();
      notifier.show();
      if (!notifier.already) {
        return notifier.getData(notifier.event_name);
      }
    }
  });
  return $('a.more_notifier', layer).on('click', function(event) {
    event.preventDefault();
    event.stopPropagation();
    return notifier.getData(notifier.event_name);
  });
})(jQuery);

(function($) {
  return $(window).keyup(function(event) {
    switch (event.target.nodeName) {
      case 'INPUT':
      case 'SELECT':
      case 'TEXTAREA':
        return;
    }
    switch (event.keyCode) {
      case 81: //Q
        if (window.location.toString().indexOf('/admin/' > 0)) {
          return window.location = window.outpath != null ? outpath : base_url;
        } else {
          return window.location = window.outpath != null ? outpath : base_url;
        }
        break;
      case 65:
      case 72:
      case 80: //A, H, P
        return (function() {})();      //if prevURL
      //window.location = prevURL;
      case 76:
      case 78:
      case 83: //L, N, S
        return (function() {})();      //if nextURL
      //window.location = nextURL;
      case 74: //J
        return window.scrollBy(0, 100);
      case 75: //K
        return window.scrollBy(0, -100);
      case 88: //22
        if (!window.location.toString().indexOf('/admin/') > 0) {
          return window.location = '#comment';
        }
    }
  });
})(jQuery);

(function($) {
  var imgs;
  //$('article figure.image img.tipTip').tipTip 'delay': 100
  $('time[datetime]').tipTip({
    'delay': 100,
    'attribute': 'datetime',
    'defaultPosition': 'top'
  });
  imgs = $('article div#content img');
  imgs.each(function() {
    var img, now;
    now = $(this);
    img = $('<img />').appendTo('body');
    img.hide().attr('src', now.attr('src'));
    return img.load(function() {
      var btn;
      if (img.width() > now.width() || img.height() > now.height()) {
        now.addClass('thumbnail');
        btn = $('<div class="btn_enlargable">원본 보기</div>').hide();
        btn.click(function() {
          return window.open(now.attr('src'));
        }).mouseover(function() {
          $(this).show();
          return false;
        }).mouseout(function() {
          $(this).show();
          return false;
        });
        now.parents('figure').append(btn);
        now.mouseenter(function() {
          return btn.show();
        });
        now.mouseleave(function() {
          return btn.hide();
        });
      }
      return img.remove();
    });
  });
  return $(document).on('click', 'div#content a img.thumbnail', function(event) {
    window.open($(event.currentTarget).parent().attr('href'));
    return false;
  });
})(jQuery);

(function($) {
  var ProfileHovercard;
  ProfileHovercard = class ProfileHovercard {
    constructor() {
      this.balloon = $('#author_balloon');
      this.statistics = $('#statistics');
      this.stored = {};
      $('body').append(this.balloon);
      this.initialize();
    }

    initialize() {
      $(document).on('click', 'body', () => {
        this.close();
        return $('img.profile_icon').removeClass('on');
      });
      return $(document).on('click', 'img.profile_icon', (event) => {
        var id, img;
        event.preventDefault();
        img = $(event.target);
        id = img.data('id');
        if (id !== '0' && id > 0) {
          if (this.balloon.is(':visible')) {
            if (img.hasClass('on')) {
              this.close();
              $('img.profile_icon').removeClass('on');
            } else {
              $('img.profile_icon').removeClass('on');
              img.addClass('on');
              this.relocate(img);
              this.open();
              if (this.stored[id] != null) {
                this.build(this.stored[id]);
              } else {
                this.get_data(id);
              }
            }
          } else {
            img.addClass('on');
            this.relocate(img);
            this.open();
            if (this.stored[id] != null) {
              this.build(this.stored[id]);
            } else {
              this.get_data(id);
            }
          }
        }
        return false;
      });
    }

    reset() {
      this.statistics.find('li.topic span.count').text(0);
      this.statistics.find('li.module span.count').text(0);
      this.statistics.find('li.course span.count').text(0);
      this.statistics.find('li.readit span.count').text(0);
      this.statistics.find('li.comment span.count').text(0);
      this.statistics.find('li.hof span.count').text(0);
      this.balloon.find('div.box img.avatar').css('background-image', 'none');
      this.balloon.find('div.header strong').text('');
      return this.balloon.find('div.header a').attr('href', '#');
    }

    relocate(img) {
      var left, offset, top;
      offset = img.offset();
      top = offset.top + img.height() + 5;
      left = offset.left - 20;
      return this.balloon.css({
        'top': top + 'px',
        'left': left + 'px'
      });
    }

    get_data(user_id) {
      return $.getJSON(`${base_url}profile/data/${user_id}`, (response) => {
        var data;
        if (response.result) {
          data = response.data;
          this.stored[user_id] = data;
          return this.build(data);
        } else {
          return alert(response.msg);
        }
      });
    }

    build(data) {
      this.statistics.find('li.topic span.count').text(data.topic_num);
      this.statistics.find('li.module span.count').text(data.module_num);
      this.statistics.find('li.course span.count').text(data.course_num);
      this.statistics.find('li.readit span.count').text(data.readit_num);
      this.statistics.find('li.comment span.count').text(data.comment_num);
      this.statistics.find('li.hof span.count').text(data.hof_num);
      this.balloon.find('div.box img.avatar').css('background-image', `url(${data.user.pict})`);
      this.balloon.find('div.header strong').text(data.user.nickname);
      return this.balloon.find('div.header a').attr('href', `${base_url}profile/${data.user.id}`);
    }

    open() {
      this.reset();
      return this.balloon.show();
    }

    close() {
      return this.balloon.hide();
    }

  };
  return $(document).ready(function() {
    return new ProfileHovercard();
  });
})(jQuery);
